// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`getBackgroundProcessInfoString formats a running process correctly 1`] = `
"<background_process>
<process_id>123</process_id>
<command>npm test</command>
<start_time_utc>1970-01-01T00:00:01.000Z</start_time_utc>
<duration_ms>2000</duration_ms>
<stdout>test output</stdout>
<stderr>test error</stderr>
<status>running</status>
</background_process>"
`;

exports[`getBackgroundProcessInfoString formats a completed process correctly 1`] = `
"<background_process>
<process_id>456</process_id>
<command>npm build</command>
<start_time_utc>1970-01-01T00:00:01.000Z</start_time_utc>
<duration_ms>1000</duration_ms>
<stdout>build successful</stdout>
<status>completed</status>
<exit_code>0</exit_code>
</background_process>"
`;

exports[`getBackgroundProcessInfoString formats an errored process correctly 1`] = `
"<background_process>
<process_id>789</process_id>
<command>invalid-command</command>
<start_time_utc>1970-01-01T00:00:01.000Z</start_time_utc>
<duration_ms>1500</duration_ms>
<stderr>command not found</stderr>
<status>error</status>
<exit_code>1</exit_code>
<signal_code>SIGTERM</signal_code>
</background_process>"
`;

exports[`getBackgroundProcessInfoString handles new output since last report 1`] = `
"<background_process>
<process_id>102</process_id>
<command>echo test</command>
<start_time_utc>1970-01-01T00:00:01.000Z</start_time_utc>
<duration_ms>1000</duration_ms>
<stdout>[PREVIOUS OUTPUT]
 more output</stdout>
<status>completed</status>
</background_process>"
`;

exports[`getBackgroundProcessInfoString handles no new content 1`] = `
"<background_process>
<process_id>103</process_id>
<command>echo test</command>
<start_time_utc>1970-01-01T00:00:01.000Z</start_time_utc>
<duration_ms>1000</duration_ms>
<status>running</status>
</background_process>"
`;

exports[`getBackgroundProcessInfoString handles new stderr without when no previous stderr 1`] = `
"<background_process>
<process_id>104</process_id>
<command>echo test</command>
<start_time_utc>1970-01-01T00:00:01.000Z</start_time_utc>
<duration_ms>1000</duration_ms>
<stderr>new error</stderr>
<status>error</status>
</background_process>"
`;

exports[`getBackgroundProcessInfoString handles new stdout without when no previous stdout 1`] = `
"<background_process>
<process_id>105</process_id>
<command>echo test</command>
<start_time_utc>1970-01-01T00:00:01.000Z</start_time_utc>
<duration_ms>2000</duration_ms>
<stdout>first output</stdout>
<status>running</status>
</background_process>"
`;

exports[`getBackgroundProcessInfoString reports completed process with new stderr even if stdout unchanged 1`] = `
"<background_process>
<process_id>106</process_id>
<command>echo test</command>
<start_time_utc>1970-01-01T00:00:01.000Z</start_time_utc>
<duration_ms>1000</duration_ms>
<stderr>new error</stderr>
<status>completed</status>
</background_process>"
`;

exports[`getBackgroundProcessInfoString reports completed process with new stdout even if stderr unchanged 1`] = `
"<background_process>
<process_id>107</process_id>
<command>echo test</command>
<start_time_utc>1970-01-01T00:00:01.000Z</start_time_utc>
<duration_ms>1000</duration_ms>
<stdout>[PREVIOUS OUTPUT]
 more</stdout>
<status>completed</status>
</background_process>"
`;

exports[`getBackgroundProcessInfoString reports process when status changes even without output changes 1`] = `
"<background_process>
<process_id>108</process_id>
<command>echo test</command>
<start_time_utc>1970-01-01T00:00:01.000Z</start_time_utc>
<duration_ms>1000</duration_ms>
<status>completed</status>
</background_process>"
`;

exports[`getBackgroundProcessInfoString calculates duration from endTime when available 1`] = `
"<background_process>
<process_id>109</process_id>
<command>echo test</command>
<start_time_utc>1970-01-01T00:00:01.000Z</start_time_utc>
<duration_ms>1500</duration_ms>
<stdout>test</stdout>
<status>completed</status>
</background_process>"
`;

exports[`getBackgroundProcessInfoString calculates duration from current time when no endTime 1`] = `
"<background_process>
<process_id>110</process_id>
<command>echo test</command>
<start_time_utc>1970-01-01T00:00:01.000Z</start_time_utc>
<duration_ms>2000</duration_ms>
<stdout>test</stdout>
<status>running</status>
</background_process>"
`;
